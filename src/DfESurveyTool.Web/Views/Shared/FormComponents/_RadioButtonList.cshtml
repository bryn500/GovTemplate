@model RadioButtonsViewModel

@{
    var radioPropName = ViewData.TemplateInfo.HtmlFieldPrefix + "." + nameof(Model.Radio); 
    var describedBy = !string.IsNullOrEmpty(Model.Hint) ? Model.HasError ? $"{radioPropName}-hint {radioPropName}-error" : $"{radioPropName}-hint" : "";
}

<div class="govuk-form-group@(Model.HasError ? " govuk-form-group--error" : "")">
    <fieldset class="govuk-fieldset" aria-describedby="@describedBy">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h1 class="govuk-fieldset__heading">
                @Model.Question
            </h1>
        </legend>
        @if (!string.IsNullOrEmpty(Model.Hint))
        {
            <div id="@radioPropName-hint" class="govuk-hint">
                <p>@Model.Hint</p>
            </div>
        }
        @if (Model.HasError)
        {
            <span id="radio-error" class="govuk-error-message">
                <span class="govuk-visually-hidden">Error:</span><span asp-validation-for="Radio" class="govuk-error-message"></span>
            </span>
        }
        <div class="govuk-radios govuk-radios--inline">
            @{ 
                var i = 0;
            }
            @foreach (var radio in Model.Radios)
            {
                var id = i == 0 ? "" : i.ToString();
                <div class="govuk-radios__item">
                    <input class="govuk-radios__input" asp-for="Radio" type="radio" id="@radioPropName@id" value="@radio.Value">
                    <label class="govuk-label govuk-radios__label" for="changed-name">
                        @radio.Text
                    </label>
                </div>
                i++;
            }
        </div>
    </fieldset>
</div>